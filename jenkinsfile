pipeline {
    agent any
    stages {
        // stage('Test front end'){
        //     steps {
        //         dir('/home/jenkins/.jenkins/workspace/project-pipeline/spring-petclinic-angular') {
        //         sh "npm i"
        //         sh "npm run test-headless"
        //      }
        //     } 
           
        // }
        stage ('Test back end'){
            steps {
                dir('/home/jenkins/.jenkins/workspace/project-pipeline/spring-petclinic-rest') {
                sh "./mvnw clean test"
            }
        }
    }

        stage('Build and Push') {
            environment {
                DOCKER_CREDS = credentials('DOCKER_CREDS')
            }
            steps {
                dir('/home/jenkins/.jenkins/workspace/project-pipeline/spring-petclinic-angular') {
                sh "ls"    
                sh "docker build -t jackmqa/pet-front-end ." 
                }
                dir('/home/jenkins/.jenkins/workspace/project-pipeline/spring-petclinic-rest') {
                sh "docker build -t jackmqa/pet-backend ." 
                }
                sh "docker login -u ${DOCKER_CREDS_USR} -p ${DOCKER_CREDS_PSW}"
                sh "docker push jackmqa/pet-front-end"
                sh "docker push jackmqa/pet-backend"
                sh "/bin/bash -c 'docker rmi \$(docker images -q)'"
            }
        }

        stage('Kubernetes') {
            steps {
                sh "aws eks update-kubeconfig --name project-cluster"
                sh "kubectl apply -f kubernetes/frontend.yaml"
                sh "kubectl delete pod backend"
                sh "kubectl apply -f kubernetes/backend.yaml"
                sh "kubectl apply -f kubernetes/mysql-deployment.yaml"
            }
        }

    
    }
}